#!/usr/bin/env python3
# -*- coding: utf-8 -*-
##
# project: this file is part of argus
# author: notizblock <nblock@archlinux.us>
# license: GPLv3

import ExtensionManager
import ThreadFetchData
import ThreadProcessData
import queue
import socket
import config

def main():
    '''main'''
    junk_queue = queue.Queue()
    out_queue = queue.Queue()
    c = config.Config()
    socket.setdefaulttimeout(c.http_timeout) #apply global timeout
    
    #initialize extensions
    em = ExtensionManager.ExtensionManager(c.extensions_directory)
    lext = [mod.Extension(junk_queue) for mod in em.extensions.values()]
    
    #execute extensions
    for ex in lext:
        ex.setDaemon(True)
        ex.start()

    #spawn some datamining threads
    for i in range(c.datamine_threads):
        dt = ThreadProcessData.ThreadProcessData(junk_queue, out_queue)
        dt.setDaemon(True)
        dt.start()
    
    #wait until data processing has been finished
    junk_queue.join()
    out_queue.join()

if __name__ == '__main__':
    main()

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4 smartindent autoindent 
